# ==============================================================================
# Dockerfile – Backend Django (multi-env, multi-stage)
# Compatible avec DEV, CI, PROD
# ==============================================================================

# -------------------
# Étape 1 : Build base
# -------------------
FROM python:3.11-slim AS build

# Variables d'environnement Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Argument pour choisir le fichier requirements à installer
ARG REQUIREMENTS_FILE=requirements/dev.txt

# Copier et installer les dépendances
COPY backend/requirements /requirements
RUN pip install --upgrade pip && pip install --no-cache-dir -r /${REQUIREMENTS_FILE}

# Copier le code source
COPY backend /app

# Copier les scripts d'entrée
COPY docker/entrypoints/entrypoint.prod.sh /entrypoint.prod.sh
COPY docker/entrypoints/entrypoint.ci.sh /entrypoint.ci.sh
COPY docker/entrypoints/entrypoint.dynamic.sh /entrypoint.sh

# Donner les droits d'exécution
RUN chmod +x /entrypoint.prod.sh /entrypoint.ci.sh /entrypoint.sh

# -------------------
# Étape 2 : Image finale
# -------------------
FROM python:3.11-slim AS final

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Copier les binaires et libs Python depuis l'image build
COPY --from=build /usr/local/lib/python3.11 /usr/local/lib/python3.11
COPY --from=build /usr/local/bin /usr/local/bin

# Copier l'application et les scripts d'entrée
COPY --from=build /app /app
COPY --from=build /entrypoint.prod.sh /entrypoint.prod.sh
COPY --from=build /entrypoint.ci.sh /entrypoint.ci.sh
COPY --from=build /entrypoint.sh /entrypoint.sh

RUN chmod +x /entrypoint.prod.sh /entrypoint.ci.sh /entrypoint.sh

# Entrypoint dynamique
ENTRYPOINT ["/entrypoint.sh"]

# Commande par défaut (prod)
CMD ["gunicorn", "config.wsgi:application", "--bind", "0.0.0.0:8000"]

EXPOSE 8000

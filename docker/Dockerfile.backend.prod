# ---- BUILDER : compile les wheels ----
FROM python:3.11-slim AS builder
ENV PIP_NO_CACHE_DIR=1
WORKDIR /wheels

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential gcc libpq-dev \
 && rm -rf /var/lib/apt/lists/*

COPY requirements/base.txt requirements/prod.txt /tmp/req/
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install --upgrade pip wheel \
 && pip wheel -r /tmp/req/prod.txt

# ---- RUNTIME : image finale légère ----
FROM python:3.11-slim
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    DJANGO_SETTINGS_MODULE=config.settings.prod \
    PYTHONHASHSEED=random \
    PORT=8000

WORKDIR /app

# lib runtime pour psycopg2
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
 && rm -rf /var/lib/apt/lists/*

# wheels précompilées + serveur
COPY --from=builder /wheels /wheels
RUN python -m pip install --upgrade pip \
 && pip install /wheels/* \
 && pip install gunicorn uvicorn

# code app + config gunicorn
COPY backend/ /app/
# important: copier le fichier de conf au bon endroit (même dossier que CMD)
# (si ton fichier est déjà dans backend/, il est copié par la ligne précédente)

EXPOSE 8000

# ASGI + gunicorn.conf.py (filtre /healthz)
CMD bash -lc "gunicorn config.asgi:application \
  -k uvicorn.workers.UvicornWorker \
  --config gunicorn.conf.py \
  --bind 0.0.0.0:${PORT} \
  --workers=${WORKERS:-2} \
  --threads=${THREADS:-4} \
  --timeout=60 \
  --forwarded-allow-ips='*' \
  --proxy-allow-from='*'"

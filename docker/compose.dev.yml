
services:
  db:
    image: postgres:16-alpine
    container_name: conversa-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: conversa_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d conversa_db"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
      target: dev
    container_name: conversa-backend
    working_dir: /app
    env_file:
      - .env.dev
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.dev
      DEBUG: "True"
      SECRET_KEY: dev-insecure-key
      DJANGO_DB_ENGINE: django.db.backends.postgresql
      DJANGO_DB_NAME: conversa_db
      DJANGO_DB_USER: postgres
      DJANGO_DB_PASSWORD: postgres
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: "5432"
      DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
      DJANGO_CORS_ALLOWED_ORIGINS: "http://localhost:4200,http://127.0.0.1:4200"
      DJANGO_CSRF_TRUSTED_ORIGINS: "http://localhost:4200,http://127.0.0.1:4200"
      DJANGO_TIME_ZONE: Europe/Brussels
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
      target: dev
    container_name: conversa-frontend
    ports:
      - "4200:4200"
    volumes:
      - ../frontend:/app
      - frontend_node_modules:/app/node_modules
    working_dir: /app
    environment:
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      - backend

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: conversa-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@conversa.be
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ../docker/pgadmin/servers.json:/pgadmin4/servers.json:ro

volumes:
  frontend_node_modules:
  pgdata:
  pgadmin_data:

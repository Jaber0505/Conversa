# =====================================================================
# Nginx • Frontend SPA (Angular/Vite) – cache-busting + sécurité
# =====================================================================
server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  location = /healthz {
    default_type text/plain;
    return 200 'ok';
    add_header Cache-Control "no-cache";
  }

  # ---- SPA routing: toutes les routes -> index.html
  location / {
    try_files $uri /index.html;
  }

  # ---- HTML: pas de cache (toujours rafraîchi)
  location ~* \.html$ {
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    etag on;
  }

  # ---- Assets fingerprintés (Vite): cache long + immutable
  location ~* \.(?:js|mjs|css|json|png|jpe?g|gif|svg|ico|webp|avif|woff2?|eot|ttf)$ {
    access_log off;
    add_header Cache-Control "public, max-age=31536000, immutable" always;
    try_files $uri =404;
  }

  # ---- Gzip
  gzip on;
  gzip_proxied any;
  gzip_min_length 1024;
  gzip_vary on;
  gzip_types
    text/plain
    text/css
    application/javascript
    application/json
    application/xml
    text/xml
    font/woff2
    image/svg+xml;

  # ---- Sécurité basique (compatible SPA)
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options DENY always;
  add_header X-XSS-Protection "1; mode=block" always;
  # CSP minimale (ajuste si CDN externes)
  add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'" always;

  etag on;

  # ---- Optionnel: expose la version de build (si /version.txt présent)
  location = /version {
    default_type text/plain;
    try_files /version.txt =404;
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
  }
}

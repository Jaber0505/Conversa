@host = http://localhost:8000
@apiprefix = api/v1
@api = api
@base = {{host}}/{{apiprefix}}
@baseDocs = {{host}}/{{api}}

@auth = {{base}}/auth
@events = {{base}}/events
@bookings = {{base}}/bookings
@payments = {{base}}/payments

# Évènements existants en base
@event_paid_id = 3
@event_free_id = 2

# Génère des emails uniques à chaque run
@ts = 5
@u2_email = user2_{{ts}}@example.com
@u3_email = user3_{{ts}}@example.com
@pwd = P@ssword1234


/****************************************************************************************
 * A) Swagger / Docs
 ****************************************************************************************/
### 200
GET {{baseDocs}}/docs/
###


/****************************************************************************************
 * B) Non authentifié -> 401
 ****************************************************************************************/
### 401 list bookings
GET {{bookings}}
###

### 401 create-intent
POST {{payments}}/create-intent/
Content-Type: application/json

{ "booking_public_id": "00000000-0000-0000-0000-000000000000" }
###


/****************************************************************************************
 * C) Flow PAYANT (inscription user2) : signup -> login -> booking -> intent -> confirm (simulateur) -> verify
 ****************************************************************************************/
### C-0) Signup user2 — 201
# @name c0_signup_u2
POST {{auth}}/register/
Content-Type: application/json

{
  "email": "{{u2_email}}",
  "password": "{{pwd}}",
  "first_name": "Alice",
  "last_name": "Tester",
  "age": 25,
  "consent_given": true,
  "native_langs": ["fr"],
  "target_langs": ["en", "nl"]
}
###

### C-1) Login user2 — 200
# @name c1_login_u2
POST {{auth}}/login/
Content-Type: application/json

{ "email": "{{u2_email}}", "password": "{{pwd}}" }
###

### C-2) Mon profil — 200
GET {{auth}}/me/
Authorization: Bearer {{c1_login_u2.response.body.$.access}}
###

### C-3) Créer une réservation PENDING — 201
# @name c3_create_booking
POST {{bookings}}/
Authorization: Bearer {{c1_login_u2.response.body.$.access}}
Content-Type: application/json

{
  "event": {{event_paid_id}},
  "quantity": 1
}
###

### C-4) Créer / réutiliser PaymentIntent — 201
# @name c4_create_intent
POST {{payments}}/create-intent/
Authorization: Bearer {{c1_login_u2.response.body.$.access}}
Content-Type: application/json

{
  "booking_public_id": "{{c3_create_booking.response.body.$.public_id}}"
}
###

### C-5) Confirmer comme le front (sans Stripe CLI) — 200
# @name c5_confirm
POST {{payments}}/confirm/
Authorization: Bearer {{c1_login_u2.response.body.$.access}}
Content-Type: application/json

{
  "booking_public_id": "{{c3_create_booking.response.body.$.public_id}}",
  "payment_method": "pm_card_visa"
}
###

### C-6) Vérifier -> CONFIRMED — 200
GET {{bookings}}/{{c3_create_booking.response.body.$.public_id}}/
Authorization: Bearer {{c1_login_u2.response.body.$.access}}
###

### C-7) Logout user2 — 204
POST {{auth}}/logout/
Authorization: Bearer {{c1_login_u2.response.body.$.access}}
Content-Type: application/json

{ "refresh": "{{c1_login_u2.response.body.$.refresh}}" }
###


/****************************************************************************************
 * D) Flow GRATUIT (inscription user2 bis) : signup -> login -> booking -> intent (free) -> verify
 ****************************************************************************************/
### D-0) Signup user2_bis — 201
# @name d0_signup_u2b
POST {{auth}}/register/
Content-Type: application/json

{
  "email": "u2b_{{ts}}@example.com",
  "password": "{{pwd}}",
  "first_name": "Alice2",
  "last_name": "Tester",
  "age": 25,
  "consent_given": true
}
###

### D-1) Login user2_bis — 200
# @name d1_login_u2b
POST {{auth}}/login/
Content-Type: application/json

{ "email": "u2b_{{ts}}@example.com", "password": "{{pwd}}" }
###

### D-2) Booking sur event gratuit — 201
# @name d2_create_booking_free
POST {{bookings}}/
Authorization: Bearer {{d1_login_u2b.response.body.$.access}}
Content-Type: application/json

{
  "event": {{event_free_id}},
  "quantity": 1
}
###

### D-3) create-intent (free:true) => CONFIRMED immédiat — 201
# @name d3_intent_free
POST {{payments}}/create-intent/
Authorization: Bearer {{d1_login_u2b.response.body.$.access}}
Content-Type: application/json

{
  "booking_public_id": "{{d2_create_booking_free.response.body.$.public_id}}"
}
###

### D-4) Vérifier CONFIRMED — 200
GET {{bookings}}/{{d2_create_booking_free.response.body.$.public_id}}/
Authorization: Bearer {{d1_login_u2b.response.body.$.access}}
###

### D-5) Logout — 204
POST {{auth}}/logout/
Authorization: Bearer {{d1_login_u2b.response.body.$.access}}
Content-Type: application/json

{ "refresh": "{{d1_login_u2b.response.body.$.refresh}}" }
###


/****************************************************************************************
 * E) Annulation (nouvel utilisateur user2_cancel) : PENDING -> CANCELLED
 ****************************************************************************************/
### E-0) Signup user2_cancel — 201
# @name e0_signup_u2c
POST {{auth}}/register/
Content-Type: application/json

{
  "email": "u2c_{{ts}}@example.com",
  "password": "{{pwd}}",
  "first_name": "AliceC",
  "last_name": "Tester",
  "age": 25,
  "consent_given": true
}
###

### E-1) Login — 200
# @name e1_login_u2c
POST {{auth}}/login/
Content-Type: application/json

{ "email": "u2c_{{ts}}@example.com", "password": "{{pwd}}" }
###

### E-2) Créer une réservation PENDING — 201
# @name e2_create_booking
POST {{bookings}}/
Authorization: Bearer {{e1_login_u2c.response.body.$.access}}
Content-Type: application/json

{
  "event": {{event_paid_id}},
  "quantity": 1
}
###

### E-3) Annuler — 200 (ou 409 si déjà confirmée)
POST {{bookings}}/{{e2_create_booking.response.body.$.public_id}}/cancel/
Authorization: Bearer {{e1_login_u2c.response.body.$.access}}
###

### E-4) Vérifier CANCELLED — 200
GET {{bookings}}/{{e2_create_booking.response.body.$.public_id}}/
Authorization: Bearer {{e1_login_u2c.response.body.$.access}}
###

### E-5) Logout — 204
POST {{auth}}/logout/
Authorization: Bearer {{e1_login_u2c.response.body.$.access}}
Content-Type: application/json

{ "refresh": "{{e1_login_u2c.response.body.$.refresh}}" }
###


/****************************************************************************************
 * F) Accès croisés : user3 ne peut PAS voir/annuler la booking de user2 (404)
 ****************************************************************************************/
### F-0) Signup user2_x — 201
# @name f0_signup_u2x
POST {{auth}}/register/
Content-Type: application/json

{
  "email": "{{u2_email}}.x",
  "password": "{{pwd}}",
  "first_name": "AliceX",
  "last_name": "Tester",
  "age": 25,
  "consent_given": true
}
###

### F-1) Login user2_x — 200
# @name f1_login_u2x
POST {{auth}}/login/
Content-Type: application/json

{ "email": "{{u2_email}}.x", "password": "{{pwd}}" }
###

### F-2) Créer une réservation (user2_x) — 201
# @name f2_u2x_create_booking
POST {{bookings}}/
Authorization: Bearer {{f1_login_u2x.response.body.$.access}}
Content-Type: application/json

{
  "event": {{event_paid_id}},
  "quantity": 1
}
###

### F-3) Signup user3 — 201
# @name f3_signup_u3
POST {{auth}}/register/
Content-Type: application/json

{
  "email": "{{u3_email}}",
  "password": "{{pwd}}",
  "first_name": "Bob",
  "last_name": "Tester",
  "age": 25,
  "consent_given": true
}
###

### F-4) Login user3 — 200
# @name f4_login_u3
POST {{auth}}/login/
Content-Type: application/json

{ "email": "{{u3_email}}", "password": "{{pwd}}" }
###

### F-5) Tenter de voir la booking de user2_x — 404
GET {{bookings}}/{{f2_u2x_create_booking.response.body.$.public_id}}/
Authorization: Bearer {{f4_login_u3.response.body.$.access}}
###

### F-6) Tenter d’annuler — 404
POST {{bookings}}/{{f2_u2x_create_booking.response.body.$.public_id}}/cancel/
Authorization: Bearer {{f4_login_u3.response.body.$.access}}
###

### F-7) Logout user3 — 204
POST {{auth}}/logout/
Authorization: Bearer {{f4_login_u3.response.body.$.access}}
Content-Type: application/json

{ "refresh": "{{f4_login_u3.response.body.$.refresh}}" }
###


/****************************************************************************************
 * G) Doublon PENDING pour même (user,event) -> 400
 ****************************************************************************************/
### G-0) Signup user2_dup — 201
# @name g0_signup_u2d
POST {{auth}}/register/
Content-Type: application/json

{
  "email": "u2d_{{ts}}@example.com",
  "password": "{{pwd}}",
  "first_name": "AliceD",
  "last_name": "Tester",
  "age": 25,
  "consent_given": true
}
###

### G-1) Login — 200
# @name g1_login_u2d
POST {{auth}}/login/
Content-Type: application/json

{ "email": "u2d_{{ts}}@example.com", "password": "{{pwd}}" }
###

### G-2) Booking #1 — 201
# @name g2_b1
POST {{bookings}}/
Authorization: Bearer {{g1_login_u2d.response.body.$.access}}
Content-Type: application/json

{
  "event": {{event_paid_id}},
  "quantity": 1
}
###

### G-3) Booking #2 (doublon attendu) — 400
POST {{bookings}}/
Authorization: Bearer {{g1_login_u2d.response.body.$.access}}
Content-Type: application/json

{
  "event": {{event_paid_id}},
  "quantity": 1
}
###

### G-4) Cleanup: annuler la #1 — 200
POST {{bookings}}/{{g2_b1.response.body.$.public_id}}/cancel/
Authorization: Bearer {{g1_login_u2d.response.body.$.access}}
###

### G-5) Logout — 204
POST {{auth}}/logout/
Authorization: Bearer {{g1_login_u2d.response.body.$.access}}
Content-Type: application/json

{ "refresh": "{{g1_login_u2d.response.body.$.refresh}}" }
###


/****************************************************************************************
 * H) Liste avec filtres — 200
 ****************************************************************************************/
### H-0) Signup user2_list — 201
# @name h0_signup_u2l
POST {{auth}}/register/
Content-Type: application/json

{
  "email": "u2l_{{ts}}@example.com",
  "password": "{{pwd}}",
  "first_name": "AliceL",
  "last_name": "Tester",
  "age": 25,
  "consent_given": true
}
###

### H-1) Login — 200
# @name h1_login_u2l
POST {{auth}}/login/
Content-Type: application/json

{ "email": "u2l_{{ts}}@example.com", "password": "{{pwd}}" }
###

### H-2) Lister tout — 200
GET {{bookings}}/
Authorization: Bearer {{h1_login_u2l.response.body.$.access}}
###

### H-3) Lister PENDING — 200
GET {{bookings}}/?status=PENDING
Authorization: Bearer {{h1_login_u2l.response.body.$.access}}
###

### H-4) Lister CONFIRMED — 200
GET {{bookings}}/?status=CONFIRMED
Authorization: Bearer {{h1_login_u2l.response.body.$.access}}
###

### H-5) Lister CANCELLED — 200
GET {{bookings}}/?status=CANCELLED
Authorization: Bearer {{h1_login_u2l.response.body.$.access}}
###

### H-6) Logout — 204
POST {{auth}}/logout/
Authorization: Bearer {{h1_login_u2l.response.body.$.access}}
Content-Type: application/json

{ "refresh": "{{h1_login_u2l.response.body.$.refresh}}" }
###

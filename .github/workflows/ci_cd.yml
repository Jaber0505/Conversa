name: CI/CD (Build → Test → Deploy)

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build & Push Docker Images (GHCR)
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    env:
      DJANGO_DB_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}
      POSTGRES_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase image prefix
        id: meta
        run: |
          echo "IMAGE_PREFIX=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Backend image
        run: |
          docker build -t $IMAGE_PREFIX-backend:latest -f docker/Dockerfile.backend .
          docker push $IMAGE_PREFIX-backend:latest

      - name: Build & Push Frontend image
        run: |
          docker build -t $IMAGE_PREFIX-frontend:latest -f docker/Dockerfile.frontend --target build .
          docker push $IMAGE_PREFIX-frontend:latest

  test:
    name: Run Django Tests via Docker Compose
    runs-on: ubuntu-latest
    needs: build

    env:
      DJANGO_DB_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}
      POSTGRES_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests with Docker Compose
        run: |
          docker compose -f docker/compose.base.yml -f docker/compose.ci.yml up --build --exit-code-from backend

      - name: Cleanup Docker containers
        if: always()
        run: docker compose -f docker/compose.base.yml -f docker/compose.ci.yml down --volumes

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Check Render Hook URL
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK_URL }}" ]; then
            echo "Missing RENDER_DEPLOY_HOOK_URL secret"
            exit 1
          fi

      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
